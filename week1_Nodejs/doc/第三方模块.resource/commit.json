{"compress":true,"commitItems":[["2083ab57-e7b7-47fe-90d7-30f4a5c91579",1550578050744,"#常用第三方的模块\n##Request\n>可用于发起 http 或 https 请求，可理解成服务端的 ajax 请求。可用于简单的服务器代理，用法和 ajax 类似。\n\n* 安装： `npm install request --save`\n\n* GET 请求\n```javascript\n    const request = require('request');\n\n    request.get('https://cnodejs.org/api/v1/topics?page=1&limit=10', (error, response, body) => {\n        console.log(body)\n    });\n    //or\n    request('https://cnodejs.org/api/v1/topics?page=1&limit=10', (error, response, body) => {\n        console.log(body)\n    });\n```\n\n    * 参数设置\n    ```javascript\n    const request = require('request');\n    request.get({\n        url: url,\n        method: 'get',\n        timeout: 10000,\n        headers: {},\n        proxy: {} ,\n        agentOptions: agentOptions,\n        params: {}\n    }, function(err, res, body) {\n        \n    });\n    ```\n\n* POST 请求\n>request支持application/x-www-form-urlencoded和multipart/form-data实现表单上传。\n\n    - application/x-www-form-urlencoded (URL-Encoded Forms)\n    ```javascript\n        request.post('http://service.com/upload', {form:{key:'value'}})\n        // or\n        request.post('http://service.com/upload').form({key:'value'})\n        // or\n        request.post({url:'http://service.com/upload', form: {key:'value'}}, function(err,httpResponse,body){ /* ... */ })\n    ```\n\n    - multipart/form-data (Multipart Form Uploads)\n    ```javascript\n        var formData = {\n          // Pass a simple key-value pair\n          my_field: 'my_value',\n          // Pass data via Buffers\n          my_buffer: new Buffer([1, 2, 3]),\n          // Pass data via Streams\n          my_file: fs.createReadStream(__dirname + '/unicycle.jpg'),\n          // Pass multiple values /w an Array\n          attachments: [\n            fs.createReadStream(__dirname + '/attachment1.jpg'),\n            fs.createReadStream(__dirname + '/attachment2.jpg')\n          ],\n          custom_file: {\n            value:  fs.createReadStream('/dev/urandom'),\n            options: {\n              filename: 'topsecret.jpg',\n              contentType: 'image/jpeg'\n            }\n          }\n        };\n        request.post({url:'http://service.com/upload', formData: formData}, function (err, httpResponse, body) {\n          if (err) {\n            return console.error('upload failed:', err);\n          }\n          console.log('Upload successful!  Server responded with:', body);\n        });\n    ```\n\n* 流\n```javascript\n    request('http://img.zcool.cn/community/018d4e554967920000019ae9df1533.jpg@900w_1l_2o_100sh.jpg').pipe(fs.createWriteStream('test.png'))\n    request('https://cnodejs.org/api/v1/topics?page=1&limit=10').pipe(fs.createWriteStream('cnodejs.json'));\n```\n\n* 爬虫(爬取图片到本地)\n>又被称为网页蜘蛛，网络机器人，主要是在服务端去请求外部的 url 拿到对方的资源，然后进行分析并抓取有效数据。\n\n```javascript\n    //这里用 request 实现一个简单的图片抓取的小爬虫\n    const request = require('request');\n    const fs = require('fs');\n    const cheerio = require('cheerio');// cheerio为包含jQuery 核心的子集\n    const path = require('path');\n\n    request('http://www.lanrentuku.com/', (error, response, body) => {\n        let $ = cheerio.load(body);\n        $('img', '.in-ne').each((i, e) => {\n            let src = $(e).attr('src');\n            let filename = path.basename(src);\n            request(src).pipe(fs.createWriteStream(filename))\n        })\n    });\n```\n\n###Async异步\n>Node.js 是一个异步机制的服务端语言，在大量异步的场景下需要按顺序执行，那正常做法就是回调嵌套回调，回调嵌套太多的问题被称之回调地狱。\n\n**为解决这一问题推出了异步控制流 ———— async**\n\n####async/await\nasync/await 就 ES7 的方案，结合 ES6 的 Promise 对象，使用前请确定 Node.js 的版本是 7.6 以上。主要益处是可以避免回调地狱（callback hell），且以最接近同步代码的方式编写异步代码。\n\n* 基本规则\n    - async 表示这是一个async函数，await只能用在这个函数里面。\n    - await 表示在这里等待promise返回结果了，再继续执行，后面跟着的应该是一个promise对象\n\n####对比使用\n>场景：3秒后返回一个值\n\n* 原始时代\n```javascript\n    let sleep = (time, cb) => {\n        setTimeout(() => {\n            cb('ok');\n        }, time);\n    }\n\n    let start = () => {\n        sleep(3000, (result) => {\n            console.log(result)\n        })\n    }\n\n    start();\n```\n\n* Promise 时代\n```javascript\n    let sleep = (time) => {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n               resolve('ok') ;\n            }, time);\n        })\n    }\n\n    let start = () => {\n        sleep(3000).then((result) => {\n            console.log(result)\n        })\n    }\n\n    start()\n```\n\n* async/await 时代\n```javascript\n    let sleep = (time) => {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n               resolve('ok') ;\n            }, time);\n        })\n    }\n\n    let start = async () => {\n        let result = await sleep(3000);\n        console.log(result)\n    }\n\n    start();\n```\n\n####捕捉错误try...catch\n```javascript\n    let sleep = (time) => {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                reject('error') ;\n            }, time);\n        })\n    }\n\n    let start = async () => {\n        try{\n            let result = await sleep(3000);\n            console.log(result)\n        } catch(err) {\n            console.log('error')\n        }\n    }\n\n    start();\n```\n\n####在循环中使用\n```javascript\n    let start = async () => {\n        for (var i = 1; i <= 3; i++) {\n            console.log(`当前是第${i}次等待..`);\n            await sleep(1000);\n        }\n    }\n\n    start();\n```\n\n####爬虫中使用\n>使用的模块：request、fs、cheerio\n\n```javascript\n    \n    const request = require('request');\n    const fs = require('fs');\n    const cheerio = require('cheerio');\n    const path = require('path');\n\n    let spider = (url) => {\n        return new Promise((resolve, reject) => {\n            request(url, (error, response, body) => {\n                resolve(body);\n            })\n        })\n    }\n\n    let start = async () => {\n        let dom = await spider('http://www.lanrentuku.com/');\n        let $ = cheerio.load(dom);\n        $('img', '.in-ne').each((i, e) => {\n            let src = $(e).attr('src');\n            let filename = path.basename(src);\n            request(src).pipe(fs.createWriteStream(filename))\n        })\n    }\n\n    start();\n```\n\n##Express\n>Express 是一个第三方模块，对原生模块封装了一套更灵活、更简洁的应用框架，其在 Node.js 环境的地位和作用好比 jQuery 在前端的地位和作用。使用 Express 可以快速地搭建一个完整功能的网站\n\n###安装\n```bash\n    npm install express\n```\n* 配套模块安装\n    - body-parser：node.js 中间件，用于处理 JSON, Raw, Text 和 URL 编码的数据。\n\n    - cookie-parser：这就是一个解析Cookie的工具。通过req.cookies可以取到传过来的cookie，并把它们转成对象。\n\n    - multer：node.js 中间件，用于处理 enctype=\"multipart/form-data\"（设置表单的MIME编码）的表单数据。\n\n###使用\n```javascript\n    //引入模块\n    var express = require('express');\n    var app = express();\n\n    //开启服务器，定义端口8080：\n    app.listen(8080, function(){\n        console.log('Server running on http://localhost:8080');\n    });\n```\n* 常用方法\n    - response.send(content)：设置响应内容\n    - response.header(name,value)：设置响应头\n    - next():执行下一个路由\n\n###定义路由\n####静态资源服务器`express.static(root, [options])`\n>express.static 是 Express 内置的唯一一个中间件。是基于 server-static 开发的，负责托管 Express 应用内的静态资源。如：图片， CSS, JavaScript 等。\n\n* root 参数指的是静态资源文件所在的根目录。\n* options 对象是可选的，支持以下属性：\n    * maxAge\n\n```javascript\n    app.use(express.static('./public'));\n```\n\n####GET\n- 定义主页路由,当我们访问：`http://localhost:8080/`时触发\n```javascript\n    app.get('/', function(request, response){\n        response.send('首页');\n    });\n```\n\n- 定义任意路由(如：cart) ，当我们访问：`http://localhost:8080/cart`时触发\n```javascript\n    app.get('/cart', function(request, response){\n        response.send('购物车页面');\n    })\n```\n\n- 定义带参数路由\n    * 查询参数：通过 request.query 来获取参数\n    ```javascript\n        //访问地址：http://localhost:8080/search?keyword=iphonX\n        app.get('/search', function(request, response){\n            var params = {\n                username: request.query.keyword\n            }\n            response.send(params);\n        });\n    ```\n\n    * 动态路由：通过 request.params 来获取参数\n    ```js\n        //访问地址：http://localhost:8080/goods/10086，\n        app.get('/goods/:id', function(request, response){\n            var params = {\n                username: request.params.id\n            }\n            response.send(params);\n        });\n    ```\n\n####POST\n>post 参数接收，可依赖第三方模块 body-parser 作为中间件进行转换会更方便、更简单\n\n```javascript\n    //参数接受和 GET 基本一样，不同的在于 GET 是 request.query 而 POST 的是 request.body\n    var bodyParser = require('body-parser');\n\n    // 创建 application/x-www-form-urlencoded 编码解析\n    var urlencodedParser = bodyParser.urlencoded({ extended: false })\n    app.post('/getUsers', urlencodedParser, function (request, response) {\n        var params = {\n            username: request.body.username,\n            age: request.body.age\n        }\n       response.send(params);\n    });\n```\n\n####跨域支持\n>把这个路由配置放在所有路由的前面，方便调用next操作\n\n```javascript\n    app.all('*', function(req, res, next) {\n        res.header(\"Access-Control-Allow-Origin\", \"*\");\n        res.header(\"Access-Control-Allow-Headers\", \"Content-Type,Content-Length, Authorization, Accept,X-Requested-With\");\n        res.header(\"Access-Control-Allow-Methods\",\"PUT,POST,GET,DELETE,OPTIONS\");\n\n        // 跨域请求CORS中的预请求\n        if(req.method==\"OPTIONS\") {\n          res.sendStatus(200);/*让options请求快速返回*/\n        } else{\n          next();\n        }\n    });\n```\n\n####代理服务器\n代理服务器最关键和主要的作用就是请求转发，即代理服务器将实际的浏览器请求转发至目标服务器，\n\n* 实现这个功能，关键就在下面两点：\n    - 请求转发至目标服务器。\n    - 响应转发至浏览器。\n\n* 无论请求还是响应，转发有需要关注两个点：\n    - 请求或响应头。\n    >http请求是无状态的，我们使用session的方式验证用户权限，session等经常保存在cookie中，所以，头的转发是必须的。\n    - 请求或响应实体数据。\n\n* 利用http-proxy-middleware实现代理\n>webpack代理服务器使用的中间件\n\n\n##Socket\n\n###协议\n####HTTP 协议\nHTTP 协议可以总结几个特点：\n\n* 一次性的、无状态的短连接：客户端发起请求、服务端响应、结束。\n* 被动性响应：只有当客户端请求时才被执行，给予响应，不能主动向客户端发起响应。\n* 信息安全性：得在服务器添加 SSL 证书，访问时用 HTTPS。\n* 跨域：服务器默认不支持跨域，可在服务端设置支持跨域的代码或对应的配置。\n\n####TCP 协议\nTCP 协议可以总结几个特点：\n\n* 有状态的长连接：客户端发起连接请求，服务端响应并建立连接，连接会一直保持直到一方主动断开。\n* 主动性：建立起与客户端的连接后，服务端可主动向客户端发起调用。\n* 信息安全性：同样可以使用 SSL 证书进行信息加密，访问时用 WSS 。\n* 跨域：默认支持跨域。\n\n####WebSocket 协议\nWebSocket 目前由 W3C 进行标准化。WebSocket 已经受到 Firefox 4、Chrome 4、Opera 10.70 以及Safari 5 等浏览器的支持。 如果在前端我们可以把 AJAX 请求当作一个 HTTP 协议的实现，那么，WebSocket 就是 TCP 协议的一种实现。\n\n###使用Socket\n\n####服务端\n* 安装ws模块\n```\n    npm install ws\n```\n\n* 开启WebSocket服务器\n```javascript\n    let socketServer = require('ws').Server;\n    let wss = new socketServer({\n        port: 1001\n    });\n```\n\n* 配合express开启服务器\n```javascript\n    let express = require('express');\n    let http = require('http');\n    let ws = require('ws');\n\n    let app = express();\n    let server = http.Server(app);\n    let SocketServer = ws.Server;\n    let wss = new SocketServer({\n        server:server,\n        port:1001\n    });\n```\n\n* 用 on 来进行事件监听\n    * connection：连接监听，当客户端连接到服务端时触发该事件，返回连接客户端对象\n        - close：连接断开监听，当客户端断开与服务器的连接时触发\n        - message：消息接受监听，当客户端向服务端发送信息时触发该事件\n        - send: 向客户端推送信息\n\n\n####客户端\n>WebSocket是HTML5开始提供的一种基于 TCP 的协议，连接建立以后，客户端和服务器端就可以通过 TCP 连接直接交换数据\n\n* 实例化 WebSocket ，参数为 WebSocket 服务器地址，建立与服务器的连接\n* 事件\n    -  onopen：当网络连接建立时触发该事件\n    -  onclose：当服务端关闭时触发该事件\n    -  onerror：当网络发生错误时触发该事件\n    -  onmessage：当接收到服务器发来的消息的时触发的事件，也是通信中最重要的一个监听事件\n* 方法\n    - close(): 在客户端断开与服务端的连接 socket.close();\n    - send()：向服务端推送消息\n\n```javascript\n    //连接 socket 服务器\n    var socket = new WebSocket('ws://localhost:1001');\n   \n    //监听 socket 的连接\n    socket.onopen = function(){\n       document.write(\"服务已连接 ws://localhost:1001\");\n    }\n   \n    //监听服务端断开\n    socket.onclose = function(){\n        document.write(\"服务已断开\");\n        socket = null;\n    }\n\n    //监听服务端异常\n    socket.onerror = function(){\n        document.write(\"服务错误\");\n        socket = null;\n    }\n\n    //监听服务端广播过来的消息\n    socket.onmessage = function(msg){\n        var msgObj = JSON.parse(msg.data);\n        if(msgObj.status == 0){\n            $('<p>' + msgObj.nickname + '[' + msgObj.time + ']退出聊天</p>').appendTo('.msgList');\n        } else{\n            $('<p>' + msgObj.nickname + '[' + msgObj.time + ']：' + msgObj.message + '</p>').appendTo('.msgList');\n        }\n    }\n\n    var sendMessage = function(_mess){\n        if(socket){\n            var myDate = new Date();\n            var now = myDate.getMonth() + '-' + myDate.getDate() + ' ' + myDate.getHours() + ':' + myDate.getMinutes() + ':' + myDate.getSeconds();             \n            \n            var mesObj = {\n                nickname: $('#nickName').val(),\n                message: _mess || $('#mesBox').val(),\n                time: now\n            }\n            //向服务端发送消息\n            socket.send(JSON.stringify(mesObj));\n        }           \n    }\n\n```\n\n####项目应用\n* 服务端开器一个服务\n* 客户端建立和服务端的连接;\n* 建立连接的同时发送上线信息给服务端 ：'xxx加入聊天';\n* 服务端接受到客户端的消息触发 message 方法，然后将该消息广播给所有在线的用户\n* 所有客户端收到来自服务端广播的消息，然后将该消息显示在聊天列表。\n* 聊天和退出聊天都是重复着客户端发送消息，服务端接受消息然后向客户端广播消息，客户端显示广播消息。",[[1550578049677,["Aaron@WIN-XIE",[[1,1," "],[-1,6681," "],[1,6682," "],[-1,6706," "],[1,6707," "],[-1,6720," "],[1,6721," "],[-1,6779," "],[1,6780," "],[-1,6808," "],[1,6809," "]],[1,1],[2,2]]],[1550578051932,["Aaron@WIN-XIE",[[1,13," "]],[13,13],[14,14]]],[1550578055061,["Aaron@WIN-XIE",[[-1,14,"R"],[1,15,"r"]],[14,15],[15,15]]],[1550578081468,["Aaron@WIN-XIE",[[-1,475,"  "],[-1,491,"  "],[-1,533,"  "],[-1,549," "],[-1,556," "],[-1,567,"  "],[-1,590," "],[-1,597," "],[-1,614,"  "],[-1,641,"  "],[-1,655,"  "],[-1,697,"  "],[-1,710," "],[-1,713," "],[-1,750,"  "],[-1,753," "],[-1,756," "],[-1,761,"  "]],[476,768],[474,740]]],[1550578082210,["Aaron@WIN-XIE",[[-1,473,"  "],[-1,489,"  "],[-1,527,"  "],[-1,543," "],[-1,548," "],[-1,559,"  "],[-1,580," "],[-1,585," "],[-1,602,"  "],[-1,625,"  "],[-1,639,"  "],[-1,677,"  "],[-1,690,"  "],[-1,726,"  "],[-1,729,"  "],[-1,735,"  "]],[474,740],[473,712]]],[1550578083684,["Aaron@WIN-XIE",[[1,473,"  "],[1,487,"  "],[1,523,"  "],[1,537," "],[1,541," "],[1,551,"  "],[1,570," "],[1,574," "],[1,590,"  "],[1,611,"  "],[1,623,"  "],[1,659,"  "],[1,670,"  "],[1,704,"  "],[1,705,"  "],[1,709,"  "]],[473,712],[473,740]]],[1550578084299,["Aaron@WIN-XIE",[[1,475,"  "],[1,489,"  "],[1,529,"  "],[1,543," "],[1,549," "],[1,559,"  "],[1,580," "],[1,586," "],[1,602,"  "],[1,627,"  "],[1,639,"  "],[1,679,"  "],[1,690," "],[1,692," "],[1,728,"  "],[1,729," "],[1,731," "],[1,735,"  "]],[473,740],[473,768]]],[1550578085667,["Aaron@WIN-XIE",[[1,477,"  "],[1,491,"  "],[1,535,"  "],[1,549," "],[1,557," "],[1,567,"  "],[1,590," "],[1,598," "],[1,614,"  "],[1,643,"  "],[1,655,"  "],[1,699,"  "],[1,710," "],[1,714," "],[1,752,"  "],[1,753,"  "],[1,761,"  "]],[473,768],[473,796]]],[1550578086442,["Aaron@WIN-XIE",[[1,479,"  "],[1,493,"  "],[1,541,"  "],[1,555," "],[1,565," "],[1,575,"  "],[1,610,"  "],[1,626,"  "],[1,659,"  "],[1,671,"  "],[1,719,"  "],[1,730," "],[1,736," "],[1,776,"  "],[1,777,"  "],[1,787,"  "]],[473,796],[473,824]]],[1550578087104,["Aaron@WIN-XIE",[[1,481,"  "],[1,495,"  "],[1,547,"  "],[1,561," "],[1,573," "],[1,583,"  "],[1,622,"  "],[1,638,"  "],[1,675,"  "],[1,687,"  "],[1,739,"  "],[1,750," "],[1,758," "],[1,800,"  "],[1,801,"  "],[1,813,"  "]],[473,824],[473,852]]],[1550578091720,["Aaron@WIN-XIE",[[-1,481,"  "],[-1,497,"  "],[-1,551,"  "],[-1,567," "],[-1,580," "],[-1,591,"  "],[-1,632,"  "],[-1,650,"  "],[-1,689,"  "],[-1,703,"  "],[-1,757,"  "],[-1,770," "],[-1,779," "],[-1,822,"  "],[-1,825,"  "],[-1,839,"  "]],[473,852],[473,824]]],[1550578092269,["Aaron@WIN-XIE",[[-1,479,"  "],[-1,495,"  "],[-1,545,"  "],[-1,561," "],[-1,572," "],[-1,583,"  "],[-1,620,"  "],[-1,638,"  "],[-1,673,"  "],[-1,687,"  "],[-1,737,"  "],[-1,750," "],[-1,757," "],[-1,798,"  "],[-1,801,"  "],[-1,813,"  "]],[473,824],[473,796]]],[1550578092814,["Aaron@WIN-XIE",[[-1,477,"  "],[-1,493,"  "],[-1,539,"  "],[-1,555," "],[-1,564," "],[-1,575,"  "],[-1,600," "],[-1,609," "],[-1,626,"  "],[-1,657,"  "],[-1,671,"  "],[-1,717,"  "],[-1,730," "],[-1,735," "],[-1,774,"  "],[-1,777,"  "],[-1,787,"  "]],[473,796],[473,768]]],[1550578093376,["Aaron@WIN-XIE",[[-1,475,"  "],[-1,491,"  "],[-1,533,"  "],[-1,549," "],[-1,556," "],[-1,567,"  "],[-1,590," "],[-1,597," "],[-1,614,"  "],[-1,641,"  "],[-1,655,"  "],[-1,697,"  "],[-1,710," "],[-1,713," "],[-1,750,"  "],[-1,753," "],[-1,756," "],[-1,761,"  "]],[473,768],[473,740]]],[1550578096993,["Aaron@WIN-XIE",[[1,475,"  * \n  "]],[472,472],[479,479]]],[1550578097535,["Aaron@WIN-XIE",[[-1,473,"    * "]],[479,479],[474,474]]],[1550578105946,["Aaron@WIN-XIE",[[-1,462,"    "]],[462,466],[462,462]]],[1550578111792,["Aaron@WIN-XIE",[[1,488,"  "],[1,526,"  "],[1,540,"  "],[1,562,"  "],[1,577,"  "],[1,599,"  "],[1,624,"  "],[1,636,"  "],[1,670,"  "],[1,689,"  "],[1,725,"  "],[1,726,"  "]],[488,731],[490,755]]],[1550578112519,["Aaron@WIN-XIE",[[1,490,"  "],[1,530,"  "],[1,544,"  "],[1,570,"  "],[1,585,"  "],[1,609,"  "],[1,638,"  "],[1,650,"  "],[1,686,"  "],[1,709,"  "],[1,747,"  "],[1,748,"  "]],[490,755],[492,779]]],[1550578113608,["Aaron@WIN-XIE",[[1,492,"  "],[1,534,"  "],[1,548,"  "],[1,578,"  "],[1,593,"  "],[1,619,"  "],[1,652,"  "],[1,664,"  "],[1,702,"  "],[1,729,"  "],[1,769,"  "],[1,770,"  "]],[492,779],[494,803]]],[1550578114654,["Aaron@WIN-XIE",[[-1,492,"  "],[-1,536,"  "],[-1,552,"  "],[-1,584,"  "],[-1,601,"  "],[-1,629,"  "],[-1,664,"  "],[-1,678,"  "],[-1,718,"  "],[-1,747,"  "],[-1,789,"  "],[-1,792,"  "]],[494,803],[492,779]]],[1550578114832,["Aaron@WIN-XIE",[[-1,490,"  "],[-1,532,"  "],[-1,548,"  "],[-1,576,"  "],[-1,593,"  "],[-1,619,"  "],[-1,650,"  "],[-1,664,"  "],[-1,702,"  "],[-1,727,"  "],[-1,767,"  "],[-1,770,"  "]],[492,779],[490,755]]],[1550578115033,["Aaron@WIN-XIE",[[-1,488,"  "],[-1,528,"  "],[-1,544,"  "],[-1,568,"  "],[-1,585,"  "],[-1,609,"  "],[-1,636,"  "],[-1,650,"  "],[-1,686,"  "],[-1,707,"  "],[-1,745,"  "],[-1,748,"  "]],[490,755],[488,731]]],[1550578115232,["Aaron@WIN-XIE",[[-1,486,"  "],[-1,524,"  "],[-1,540,"  "],[-1,560,"  "],[-1,577," "],[-1,582," "],[-1,599,"  "],[-1,622,"  "],[-1,636,"  "],[-1,670,"  "],[-1,687,"  "],[-1,723,"  "],[-1,726,"  "]],[488,731],[486,707]]],[1550578115484,["Aaron@WIN-XIE",[[-1,538,"  "],[-1,550,"  "],[-1,571,"  "],[-1,589," "],[-1,592," "],[-1,606," "],[-1,609," "],[-1,622," "],[-1,625," "],[-1,654,"  "],[-1,699,"  "]],[486,707],[486,691]]],[1550578115730,["Aaron@WIN-XIE",[[-1,536,"  "],[-1,548,"  "],[-1,565,"  "],[-1,583,"  "],[-1,598,"  "],[-1,612,"  "],[-1,642,"  "],[-1,685,"  "]],[486,691],[486,675]]],[1550578116734,["Aaron@WIN-XIE",[[1,486,"  "],[1,522,"  "],[1,536,"  "],[1,546,"  "],[1,561,"  "],[1,577,"  "],[1,590,"  "],[1,602,"  "],[1,630,"  "],[1,641,"  "],[1,671,"  "],[1,672,"  "]],[486,675],[486,699]]],[1550578117226,["Aaron@WIN-XIE",[[1,488,"  "],[1,526,"  "],[1,540,"  "],[1,554,"  "],[1,569," "],[1,571," "],[1,587,"  "],[1,604,"  "],[1,616,"  "],[1,646,"  "],[1,661,"  "],[1,693,"  "],[1,694,"  "]],[486,699],[486,723]]],[1550578120156,["Aaron@WIN-XIE",[[1,490,"  "],[1,530,"  "],[1,544,"  "],[1,562,"  "],[1,577," "],[1,581," "],[1,597,"  "],[1,618,"  "],[1,630,"  "],[1,662,"  "],[1,681,"  "],[1,715,"  "],[1,716,"  "]],[486,723],[486,747]]],[1550578120642,["Aaron@WIN-XIE",[[1,492,"  "],[1,534,"  "],[1,548,"  "],[1,570,"  "],[1,585,"  "],[1,607,"  "],[1,632,"  "],[1,644,"  "],[1,678,"  "],[1,701,"  "],[1,737,"  "],[1,738,"  "]],[486,747],[486,771]]],[1550578123742,["Aaron@WIN-XIE",[[-1,469,"\n"]],[469,469],[468,468]]],[1550578131191,["Aaron@WIN-XIE",[[-1,491,"  "],[-1,535,"  "],[-1,551,"  "],[-1,575,"  "],[-1,592,"  "],[-1,616,"  "],[-1,643,"  "],[-1,657,"  "],[-1,693,"  "],[-1,718,"  "],[-1,756,"  "],[-1,759,"  "]],[492,770],[490,746]]],[1550578131676,["Aaron@WIN-XIE",[[-1,489,"  "],[-1,531,"  "],[-1,547,"  "],[-1,567,"  "],[-1,584," "],[-1,589," "],[-1,606,"  "],[-1,629,"  "],[-1,643,"  "],[-1,677,"  "],[-1,698,"  "],[-1,734,"  "],[-1,737,"  "]],[490,746],[488,722]]],[1550578141186,["Aaron@WIN-XIE",[[-1,723,"  "]],[723,725],[723,723]]],[1550578143840,["Aaron@WIN-XIE",[[-1,469,"  "]],[469,471],[469,469]]],[1550578163922,["Aaron@WIN-XIE",[[-1,870,"  "],[-1,886,"  "],[-1,964,"  "],[-1,972," "],[-1,979," "],[-1,1048,"  "],[-1,1056,"  "],[-1,1179,"  "]],[871,1186],[869,1172]]],[1550578164175,["Aaron@WIN-XIE",[[-1,868,"  "],[-1,884,"  "],[-1,958,"  "],[-1,966," "],[-1,971," "],[-1,1038,"  "],[-1,1046,"  "],[-1,1167,"  "]],[869,1172],[868,1158]]],[1550578164481,["Aaron@WIN-XIE",[[-1,884,"  "],[-1,952,"  "],[-1,960," "],[-1,963," "],[-1,1028,"  "],[-1,1036,"  "]],[868,1158],[868,1148]]],[1550578165401,["Aaron@WIN-XIE",[[-1,882,"  "],[-1,948,"  "],[-1,956,"  "],[-1,1020,"  "],[-1,1028,"  "]],[868,1148],[868,1138]]],[1550578166284,["Aaron@WIN-XIE",[[1,868,"  "],[1,882,"  "],[1,946,"  "],[1,952,"  "],[1,1014,"  "],[1,1020,"  "],[1,1135,"  "]],[868,1138],[868,1152]]],[1550578166595,["Aaron@WIN-XIE",[[1,870,"  "],[1,884,"  "],[1,952,"  "],[1,958," "],[1,960," "],[1,1024,"  "],[1,1030,"  "],[1,1147,"  "]],[868,1152],[868,1166]]],[1550578167112,["Aaron@WIN-XIE",[[1,872,"  "],[1,886,"  "],[1,958,"  "],[1,964," "],[1,968," "],[1,1034,"  "],[1,1040,"  "],[1,1159,"  "]],[868,1166],[868,1180]]],[1550578167669,["Aaron@WIN-XIE",[[1,874,"  "],[1,888,"  "],[1,964,"  "],[1,970," "],[1,976," "],[1,1044,"  "],[1,1050,"  "],[1,1171,"  "]],[868,1180],[868,1194]]],[1550578168271,["Aaron@WIN-XIE",[[1,876,"  "],[1,890,"  "],[1,970,"  "],[1,976," "],[1,984," "],[1,1054,"  "],[1,1060,"  "],[1,1183,"  "]],[868,1194],[868,1208]]],[1550578169651,["Aaron@WIN-XIE",[[1,878,"  "],[1,892,"  "],[1,976,"  "],[1,982," "],[1,992," "],[1,1064,"  "],[1,1070,"  "],[1,1195,"  "]],[868,1208],[868,1222]]],[1550578170625,["Aaron@WIN-XIE",[[-1,878,"  "],[-1,894,"  "],[-1,980,"  "],[-1,988," "],[-1,999," "],[-1,1072,"  "],[-1,1080,"  "],[-1,1207,"  "]],[868,1222],[868,1208]]],[1550578171070,["Aaron@WIN-XIE",[[-1,876,"  "],[-1,892,"  "],[-1,974,"  "],[-1,982," "],[-1,991," "],[-1,1062,"  "],[-1,1070,"  "],[-1,1195,"  "]],[868,1208],[868,1194]]],[1550578176449,["Aaron@WIN-XIE",[[1,898,"  "],[1,970,"  "],[1,976," "],[1,984," "],[1,1054,"  "],[1,1060,"  "]],[898,1161],[900,1171]]],[1550578178586,["Aaron@WIN-XIE",[[1,900,"  "],[1,974,"  "],[1,980," "],[1,990," "],[1,1062,"  "],[1,1068,"  "]],[900,1171],[902,1181]]],[1550578184084,["Aaron@WIN-XIE",[[1,872,"- \n    "]],[867,867],[874,874]]],[1550578188018,["Aaron@WIN-XIE",[[-1,868,"    - "]],[874,874],[868,868]]],[1550578197051,["Aaron@WIN-XIE",[[-1,808,"    "]],[808,812],[808,808]]],[1550578201379,["Aaron@WIN-XIE",[[1,808,"    "]],[808,808],[812,812]]],[1550578205493,["Aaron@WIN-XIE",[[-1,868,"\n"]],[868,868],[867,867]]],[1550578232246,["Aaron@WIN-XIE",[[-1,2321,"  "]],[2323,2323],[2321,2321]]],[1550578233979,["Aaron@WIN-XIE",[[-1,2320,"  "]],[2320,2322],[2320,2320]]],[1550578239380,["Aaron@WIN-XIE",[[1,2320,"      "]],[2320,2320],[2326,2326]]],[1550578241205,["Aaron@WIN-XIE",[[-1,2320,"      "]],[2326,2326],[2320,2320]]],[1550578249344,["Aaron@WIN-XIE",[[1,3187," "]],[3187,3187],[3188,3188]]],[1550578257970,["Aaron@WIN-XIE",[[1,3549," "]],[3549,3549],[3550,3550]]],[1550578263770,["Aaron@WIN-XIE",[[1,4497," "]],[4497,4497],[4498,4498]]],[1550578265749,["Aaron@WIN-XIE",[[1,4925," "]],[4925,4925],[4926,4926]]],[1550578268039,["Aaron@WIN-XIE",[[1,5128," "]],[5128,5128],[5129,5129]]],[1550578271145,["Aaron@WIN-XIE",[[1,5880," "]],[5880,5880],[5881,5881]]],[1550578273627,["Aaron@WIN-XIE",[[1,6001," "]],[6001,6001],[6002,6002]]],[1550578275854,["Aaron@WIN-XIE",[[1,6274," "]],[6274,6274],[6275,6275]]],[1550578278001,["Aaron@WIN-XIE",[[1,6606," "]],[6606,6606],[6607,6607]]],[1550578278999,["Aaron@WIN-XIE",[[1,6616," "]],[6616,6616],[6617,6617]]],[1550578290657,["Aaron@WIN-XIE",[[1,6894," "]],[6894,6894],[6895,6895]]],[1550578296511,["Aaron@WIN-XIE",[[1,7829," "]],[7829,7829],[7830,7830]]],[1550578300589,["Aaron@WIN-XIE",[[1,8369," "]],[8369,8369],[8370,8370]]],[1550578303965,["Aaron@WIN-XIE",[[1,8896," "]],[8896,8896],[8897,8897]]],[1550578306586,["Aaron@WIN-XIE",[[1,9185," "]],[9185,9185],[9186,9186]]],[1550578308231,["Aaron@WIN-XIE",[[1,9197," "]],[9197,9197],[9198,9198]]],[1550578309121,["Aaron@WIN-XIE",[[1,9205," "]],[9205,9205],[9206,9206]]],[1550578312548,["Aaron@WIN-XIE",[[1,9384," "]],[9384,9384],[9385,9385]]],[1550578315094,["Aaron@WIN-XIE",[[1,9548," "]],[9548,9548],[9549,9549]]],[1550578318192,["Aaron@WIN-XIE",[[1,9719," "]],[9719,9719],[9720,9720]]],[1550578319241,["Aaron@WIN-XIE",[[1,9734," "]],[9734,9734],[9735,9735]]],[1550578323860,["Aaron@WIN-XIE",[[1,10407," "]],[10407,10407],[10408,10408]]],[1550578329903,["Aaron@WIN-XIE",[[1,12092," "]],[12092,12092],[12093,12093]]],[1550578360114,["Aaron@WIN-XIE",[[-1,9408,"\n"]],[9408,9408],[9407,9407]]],[1550578366425,["Aaron@WIN-XIE",[[1,9408,"\n"]],[9407,9407],[9408,9408]]],[1550578381851,["Aaron@WIN-XIE",[[-1,5176,"    "]],[5176,5180],[5176,5176]]],[1550578382323,["Aaron@WIN-XIE",[[-1,5176,"\n"]],[5176,5176],[5175,5175]]],[1550578403448,["Aaron@WIN-XIE",[[1,3305," "]],[3305,3305],[3306,3306]]],[1550578424053,["Aaron@WIN-XIE",[[-1,807,"\n"]],[807,807],[806,806]]],[1550578434499,["Aaron@WIN-XIE",[[-1,807,"    -"]],[807,811],[807,807]]],[1550578435365,["Aaron@WIN-XIE",[[1,807,"*"]],[807,807],[808,808]]],[1550578442320,["Aaron@WIN-XIE",[[1,807,"    "]],[807,807],[811,811]]],[1550578446013,["Aaron@WIN-XIE",[[1,807,"\n"]],[806,806],[807,807]]],[1550578449307,["Aaron@WIN-XIE",[[1,872,"* \n    "]],[867,867],[874,874]]],[1550578450037,["Aaron@WIN-XIE",[[-1,868,"    * "]],[874,874],[869,869]]],[1550578455705,["Aaron@WIN-XIE",[[-1,808,"    "]],[808,812],[808,808]]],[1550578464430,["Aaron@WIN-XIE",[[-1,736,">"]],[737,737],[736,736]]],[1550578467496,["Aaron@WIN-XIE",[[1,807,"  "]],[807,807],[809,809]]],[1550578475383,["Aaron@WIN-XIE",[[-1,865,"\n"]],[865,865],[864,864]]],[1550578480985,["Aaron@WIN-XIE",[[-1,871,"  "],[-1,887,"  "],[-1,973,"  "],[-1,981," "],[-1,992," "],[-1,1065,"  "],[-1,1073,"  "],[-1,1200,"  "]],[871,1211],[869,1197]]],[1550578481742,["Aaron@WIN-XIE",[[-1,869,"  "],[-1,885,"  "],[-1,967,"  "],[-1,975," "],[-1,984," "],[-1,1055,"  "],[-1,1063,"  "],[-1,1188,"  "]],[869,1197],[867,1183]]],[1550578483557,["Aaron@WIN-XIE",[[-1,867,"  "],[-1,883,"  "],[-1,961,"  "],[-1,969," "],[-1,976," "],[-1,1045,"  "],[-1,1053,"  "],[-1,1176,"  "]],[867,1183],[865,1169]]],[1550578484506,["Aaron@WIN-XIE",[[-1,865,"  "],[-1,881,"  "],[-1,955,"  "],[-1,963," "],[-1,968," "],[-1,1035,"  "],[-1,1043,"  "],[-1,1164,"  "]],[865,1169],[865,1155]]],[1550578487791,["Aaron@WIN-XIE",[[1,865,"  "],[1,879,"  "],[1,951,"  "],[1,957," "],[1,961," "],[1,1027,"  "],[1,1033,"  "],[1,1152,"  "]],[865,1155],[865,1169]]],[1550578488895,["Aaron@WIN-XIE",[[1,867,"  "],[1,881,"  "],[1,957,"  "],[1,963," "],[1,969," "],[1,1037,"  "],[1,1043,"  "],[1,1164,"  "]],[865,1169],[865,1183]]],[1550578512546,["Aaron@WIN-XIE",[[-1,1187,"  -"],[1,1190,"*"]],[1185,1191],[1189,1189]]],[1550578519304,["Aaron@WIN-XIE",[[1,1237,"\n    "]],[1237,1237],[1242,1242]]],[1550578522423,["Aaron@WIN-XIE",[[-1,1237,"\n    "]],[1242,1242],[1237,1237]]],[1550578524212,["Aaron@WIN-XIE",[[1,1237,"\n    "]],[1237,1237],[1242,1242]]],[1550578528524,["Aaron@WIN-XIE",[[-1,1241,"  "],[-1,1257,"  "],[-1,1290,"  "],[-1,1324," "],[-1,1333," "],[-1,1356,"  "],[-1,1391," "],[-1,1400," "],[-1,1435,"  "],[-1,1478,"  "],[-1,1547,"  "],[-1,1593,"  "],[-1,1610," "],[-1,1621," "],[-1,1675,"  "],[-1,1747,"  "],[-1,1752,"  "],[-1,1787,"  "],[-1,1834,"  "],[-1,1869,"  "],[-1,1898," "],[-1,1911," "],[-1,1948,"  "],[-1,1952,"  "],[-1,1964,"  "],[-1,1981,"  "],[-1,2096,"  "],[-1,2109,"  "],[-1,2166," "],[-1,2175," "],[-1,2178,"  "],[-1,2259,"  "],[-1,2265,"  "]],[1242,2272],[1240,2216]]],[1550578529063,["Aaron@WIN-XIE",[[-1,1239,"  "],[-1,1255,"  "],[-1,1284,"  "],[-1,1318," "],[-1,1325," "],[-1,1348,"  "],[-1,1381," "],[-1,1388," "],[-1,1423,"  "],[-1,1462,"  "],[-1,1529,"  "],[-1,1573,"  "],[-1,1590," "],[-1,1599," "],[-1,1653,"  "],[-1,1721,"  "],[-1,1726,"  "],[-1,1757,"  "],[-1,1804,"  "],[-1,1835,"  "],[-1,1864," "],[-1,1875," "],[-1,1910,"  "],[-1,1914,"  "],[-1,1924,"  "],[-1,1937,"  "],[-1,2050,"  "],[-1,2063,"  "],[-1,2118," "],[-1,2125," "],[-1,2128,"  "],[-1,2205,"  "],[-1,2211,"  "]],[1240,2216],[1238,2160]]],[1550578529634,["Aaron@WIN-XIE",[[-1,1238," "],[-1,1253,"  "],[-1,1274," "],[-1,1279," "],[-1,1312,"  "],[-1,1344,"  "],[-1,1371,"  "],[-1,1415,"  "],[-1,1442," "],[-1,1447," "],[-1,1511,"  "],[-1,1553,"  "],[-1,1570,"  "],[-1,1637,"  "],[-1,1695,"  "],[-1,1700,"  "],[-1,1727,"  "],[-1,1774,"  "],[-1,1801,"  "],[-1,1830," "],[-1,1839," "],[-1,1872,"  "],[-1,1876," "],[-1,1881," "],[-1,1884," "],[-1,1887," "],[-1,1891,"  "],[-1,2004,"  "],[-1,2017,"  "],[-1,2074,"  "],[-1,2078,"  "],[-1,2149,"  "]],[1238,2160],[1238,2108]]],[1550578533119,["Aaron@WIN-XIE",[[1,1238,"  "],[1,1252,"  "],[1,1275,"  "],[1,1307," "],[1,1311," "],[1,1333,"  "],[1,1362," "],[1,1366," "],[1,1400,"  "],[1,1433,"  "],[1,1496,"  "],[1,1536,"  "],[1,1551," "],[1,1557," "],[1,1616,"  "],[1,1668," "],[1,1672," "],[1,1675,"  "],[1,1700,"  "],[1,1745,"  "],[1,1770,"  "],[1,1797," "],[1,1805," "],[1,1837,"  "],[1,1839," "],[1,1843," "],[1,1845,"  "],[1,1852,"  "],[1,1961,"  "],[1,1972,"  "],[1,2023," "],[1,2027," "],[1,2029,"  "],[1,2100,"  "],[1,2104,"  "]],[1238,2108],[1238,2164]]],[1550578535806,["Aaron@WIN-XIE",[[1,1240,"  "],[1,1254,"  "],[1,1281,"  "],[1,1313," "],[1,1319," "],[1,1341,"  "],[1,1372," "],[1,1378," "],[1,1412,"  "],[1,1449,"  "],[1,1514,"  "],[1,1556,"  "],[1,1571," "],[1,1579," "],[1,1632,"  "],[1,1698,"  "],[1,1701,"  "],[1,1730,"  "],[1,1775,"  "],[1,1804,"  "],[1,1831," "],[1,1841," "],[1,1875,"  "],[1,1877,"  "],[1,1885,"  "],[1,1896,"  "],[1,2007,"  "],[1,2018,"  "],[1,2071," "],[1,2077," "],[1,2079,"  "],[1,2154,"  "],[1,2158,"  "]],[1238,2164],[1238,2220]]],[1550578544873,["Aaron@WIN-XIE",[[-1,1260,"  "],[-1,1279,"  "],[-1,1325,"  "],[-1,1349," "],[-1,1356," "],[-1,1382,"  "],[-1,1430,"  "],[-1,1457," "],[-1,1464," "],[-1,1530,"  "],[-1,1574,"  "],[-1,1591,"  "],[-1,1662,"  "],[-1,1722,"  "],[-1,1727,"  "],[-1,1758,"  "],[-1,1805,"  "],[-1,1836,"  "],[-1,1865," "],[-1,1876," "],[-1,1911,"  "],[-1,1915,"  "],[-1,1925," "],[-1,1930," "],[-1,1934,"  "],[-1,2051,"  "],[-1,2064,"  "],[-1,2125,"  "],[-1,2129,"  "],[-1,2202,"  "]],[1261,2211],[1259,2159]]],[1550578545123,["Aaron@WIN-XIE",[[-1,1258,"  "],[-1,1277,"  "],[-1,1319,"  "],[-1,1343," "],[-1,1348," "],[-1,1374,"  "],[-1,1418,"  "],[-1,1445," "],[-1,1450," "],[-1,1514,"  "],[-1,1556,"  "],[-1,1573,"  "],[-1,1640,"  "],[-1,1698,"  "],[-1,1703,"  "],[-1,1730,"  "],[-1,1777,"  "],[-1,1804,"  "],[-1,1833," "],[-1,1842," "],[-1,1875,"  "],[-1,1879," "],[-1,1884," "],[-1,1887," "],[-1,1890," "],[-1,1894,"  "],[-1,2007,"  "],[-1,2020,"  "],[-1,2077,"  "],[-1,2081,"  "],[-1,2152,"  "]],[1259,2159],[1257,2107]]],[1550578545422,["Aaron@WIN-XIE",[[-1,1256,"  "],[-1,1275,"  "],[-1,1313,"  "],[-1,1337," "],[-1,1340," "],[-1,1366,"  "],[-1,1406,"  "],[-1,1433," "],[-1,1436," "],[-1,1498,"  "],[-1,1538,"  "],[-1,1555,"  "],[-1,1618,"  "],[-1,1674,"  "],[-1,1679,"  "],[-1,1702,"  "],[-1,1749,"  "],[-1,1772,"  "],[-1,1801," "],[-1,1808," "],[-1,1839,"  "],[-1,1843," "],[-1,1846," "],[-1,1849,"  "],[-1,1854,"  "],[-1,1963,"  "],[-1,1976,"  "],[-1,2029,"  "],[-1,2033,"  "],[-1,2102,"  "]],[1257,2107],[1256,2055]]],[1550578545857,["Aaron@WIN-XIE",[[-1,1273,"  "],[-1,1307,"  "],[-1,1331,"  "],[-1,1358,"  "],[-1,1394,"  "],[-1,1421,"  "],[-1,1482,"  "],[-1,1520,"  "],[-1,1537,"  "],[-1,1594," "],[-1,1597," "],[-1,1650,"  "],[-1,1655,"  "],[-1,1674,"  "],[-1,1723,"  "],[-1,1736," "],[-1,1741," "],[-1,1773,"  "],[-1,1801,"    }\n"],[1,1811,"}\n"],[-1,1919,"  "],[-1,1932,"  "],[-1,1981,"  "],[-1,1985,"  "]],[1256,2055],[1256,2011]]],[1550578546440,["Aaron@WIN-XIE",[[-1,1521,"  "],[-1,1576,"  "],[-1,1648,"  "],[-1,1695,"  "],[-1,1708,"  "],[-1,1739," "],[-1,1742," "],[-1,1769,"  "],[-1,1894,"  "]],[1256,2011],[1256,1995]]],[1550578546726,["Aaron@WIN-XIE",[[-1,1700,"  "],[-1,1729,"  "]],[1256,1995],[1256,1991]]],[1550578548000,["Aaron@WIN-XIE",[[1,1256,"  "],[1,1273,"  "],[1,1305,"  "],[1,1327,"  "],[1,1352,"  "],[1,1386,"  "],[1,1411,"  "],[1,1470,"  "],[1,1506,"  "],[1,1521,"  "],[1,1574,"  "],[1,1626,"  "],[1,1629,"  "],[1,1644,"  "],[1,1689,"  "],[1,1700,"  "],[1,1727,"  "],[1,1753,"  "],[1,1755,"  "],[1,1757,"  "],[1,1760,"  "],[1,1865,"  "],[1,1876,"  "],[1,1921,"  "],[1,1923,"  "],[1,1988,"  "]],[1256,1991],[1256,2043]]],[1550578548463,["Aaron@WIN-XIE",[[1,1258,"  "],[1,1275,"  "],[1,1311,"  "],[1,1333," "],[1,1335," "],[1,1360,"  "],[1,1398,"  "],[1,1423," "],[1,1425," "],[1,1486,"  "],[1,1524,"  "],[1,1539,"  "],[1,1596,"  "],[1,1650,"  "],[1,1653,"  "],[1,1672,"  "],[1,1719,"  "],[1,1730,"  "],[1,1759," "],[1,1761," "],[1,1789,"  "],[1,1791," "],[1,1793," "],[1,1795," "],[1,1797," "],[1,1800,"  "],[1,1909,"  "],[1,1920,"  "],[1,1969,"  "],[1,1971,"  "],[1,2038,"  "]],[1256,2043],[1256,2095]]],[1550578548935,["Aaron@WIN-XIE",[[1,1260,"  "],[1,1277,"  "],[1,1317,"  "],[1,1339," "],[1,1343," "],[1,1368,"  "],[1,1410,"  "],[1,1435," "],[1,1439," "],[1,1502,"  "],[1,1542,"  "],[1,1557,"  "],[1,1618,"  "],[1,1674,"  "],[1,1677,"  "],[1,1700,"  "],[1,1749,"  "],[1,1760,"  "],[1,1791," "],[1,1795," "],[1,1825,"  "],[1,1827," "],[1,1831," "],[1,1833," "],[1,1837," "],[1,1840,"  "],[1,1953,"  "],[1,1964,"  "],[1,2017,"  "],[1,2019,"  "],[1,2088,"  "]],[1256,2095],[1256,2147]]],[1550578549733,["Aaron@WIN-XIE",[[1,1262,"  "],[1,1279,"  "],[1,1323,"  "],[1,1345," "],[1,1351," "],[1,1376,"  "],[1,1422,"  "],[1,1447," "],[1,1453," "],[1,1518,"  "],[1,1560,"  "],[1,1575,"  "],[1,1640,"  "],[1,1698,"  "],[1,1701,"  "],[1,1728,"  "],[1,1779,"  "],[1,1790,"  "],[1,1823," "],[1,1829," "],[1,1861,"  "],[1,1863,"  "],[1,1871," "],[1,1877," "],[1,1880,"  "],[1,1997,"  "],[1,2008,"  "],[1,2065,"  "],[1,2067,"  "],[1,2138,"  "]],[1256,2147],[1256,2199]]],[1550578550356,["Aaron@WIN-XIE",[[1,1264,"  "],[1,1281,"  "],[1,1329,"  "],[1,1351," "],[1,1359," "],[1,1384,"  "],[1,1434,"  "],[1,1459," "],[1,1467," "],[1,1534,"  "],[1,1578,"  "],[1,1593,"  "],[1,1662,"  "],[1,1722,"  "],[1,1725,"  "],[1,1756,"  "],[1,1809,"  "],[1,1820,"  "],[1,1855," "],[1,1863," "],[1,1897,"  "],[1,1899,"  "],[1,1909," "],[1,1917," "],[1,1920,"  "],[1,2041,"  "],[1,2052,"  "],[1,2113,"  "],[1,2115,"  "],[1,2188,"  "]],[1256,2199],[1256,2251]]],[1550578553641,["Aaron@WIN-XIE",[[-1,1264,"  "],[-1,1283,"  "],[-1,1333,"  "],[-1,1357," "],[-1,1366," "],[-1,1392,"  "],[-1,1444,"  "],[-1,1471," "],[-1,1480," "],[-1,1548,"  "],[-1,1594,"  "],[-1,1611,"  "],[-1,1682,"  "],[-1,1744,"  "],[-1,1749,"  "],[-1,1782,"  "],[-1,1837,"  "],[-1,1850,"  "],[-1,1887," "],[-1,1896," "],[-1,1931,"  "],[-1,1935,"  "],[-1,1947," "],[-1,1956," "],[-1,1960,"  "],[-1,2083,"  "],[-1,2096,"  "],[-1,2159,"  "],[-1,2163,"  "],[-1,2238,"  "]],[1256,2251],[1256,2199]]],[1550578554478,["Aaron@WIN-XIE",[[-1,1262,"  "],[-1,1281,"  "],[-1,1327,"  "],[-1,1351," "],[-1,1358," "],[-1,1384,"  "],[-1,1432,"  "],[-1,1459," "],[-1,1466," "],[-1,1532,"  "],[-1,1576,"  "],[-1,1593,"  "],[-1,1660,"  "],[-1,1720,"  "],[-1,1725,"  "],[-1,1754,"  "],[-1,1807,"  "],[-1,1820,"  "],[-1,1855," "],[-1,1862," "],[-1,1895,"  "],[-1,1899,"  "],[-1,1909," "],[-1,1916," "],[-1,1920,"  "],[-1,2039,"  "],[-1,2052,"  "],[-1,2111,"  "],[-1,2115,"  "],[-1,2188,"  "]],[1256,2199],[1256,2147]]],[1550578555702,["Aaron@WIN-XIE",[[-1,1260,"  "],[-1,1279,"  "],[-1,1321,"  "],[-1,1345," "],[-1,1350," "],[-1,1376,"  "],[-1,1420,"  "],[-1,1447," "],[-1,1452," "],[-1,1516,"  "],[-1,1558,"  "],[-1,1575,"  "],[-1,1638,"  "],[-1,1696,"  "],[-1,1701,"  "],[-1,1726,"  "],[-1,1777,"  "],[-1,1790,"  "],[-1,1823," "],[-1,1828," "],[-1,1859,"  "],[-1,1863," "],[-1,1868," "],[-1,1871," "],[-1,1876," "],[-1,1880,"  "],[-1,1995,"  "],[-1,2008,"  "],[-1,2063,"  "],[-1,2067,"  "],[-1,2138,"  "]],[1256,2147],[1256,2095]]],[1550578557979,["Aaron@WIN-XIE",[[-1,1258,"  "],[-1,1277,"  "],[-1,1315,"  "],[-1,1339," "],[-1,1342," "],[-1,1368,"  "],[-1,1408,"  "],[-1,1435," "],[-1,1438," "],[-1,1500,"  "],[-1,1540,"  "],[-1,1557,"  "],[-1,1616,"  "],[-1,1672,"  "],[-1,1677,"  "],[-1,1698,"  "],[-1,1747,"  "],[-1,1760,"  "],[-1,1791," "],[-1,1794," "],[-1,1823,"  "],[-1,1827," "],[-1,1830," "],[-1,1833," "],[-1,1836," "],[-1,1840,"  "],[-1,1951,"  "],[-1,1964,"  "],[-1,2015,"  "],[-1,2019,"  "],[-1,2088,"  "]],[1256,2095],[1256,2043]]],[1550578559100,["Aaron@WIN-XIE",[[-1,1256,"  "],[-1,1275,"  "],[-1,1309,"  "],[-1,1333,"  "],[-1,1360,"  "],[-1,1396,"  "],[-1,1423,"  "],[-1,1484,"  "],[-1,1522,"  "],[-1,1539,"  "],[-1,1594,"  "],[-1,1648,"  "],[-1,1653,"  "],[-1,1670,"  "],[-1,1717,"  "],[-1,1730,"  "],[-1,1759,"  "],[-1,1787,"  "],[-1,1791,"  "],[-1,1795,"  "],[-1,1800,"  "],[-1,1907,"  "],[-1,1920,"  "],[-1,1967,"  "],[-1,1971,"  "],[-1,2038,"  "]],[1256,2043],[1256,1991]]],[1550578559905,["Aaron@WIN-XIE",[[1,1256,"  "],[1,1273,"  "],[1,1305,"  "],[1,1327,"  "],[1,1352,"  "],[1,1386,"  "],[1,1411,"  "],[1,1470,"  "],[1,1506,"  "],[1,1521,"  "],[1,1574,"  "],[1,1626,"  "],[1,1629,"  "],[1,1644,"  "],[1,1689,"  "],[1,1700,"  "],[1,1727,"  "],[1,1753,"  "],[1,1755,"  "],[1,1757,"  "],[1,1760,"  "],[1,1865,"  "],[1,1876,"  "],[1,1921,"  "],[1,1923,"  "],[1,1988,"  "]],[1256,1991],[1256,2043]]],[1550578560712,["Aaron@WIN-XIE",[[1,1258,"  "],[1,1275,"  "],[1,1311,"  "],[1,1333," "],[1,1335," "],[1,1360,"  "],[1,1398,"  "],[1,1423," "],[1,1425," "],[1,1486,"  "],[1,1524,"  "],[1,1539,"  "],[1,1596,"  "],[1,1650,"  "],[1,1653,"  "],[1,1672,"  "],[1,1719,"  "],[1,1730,"  "],[1,1759," "],[1,1761," "],[1,1789,"  "],[1,1791," "],[1,1793," "],[1,1795," "],[1,1797," "],[1,1800,"  "],[1,1909,"  "],[1,1920,"  "],[1,1969,"  "],[1,1971,"  "],[1,2038,"  "]],[1256,2043],[1256,2095]]],[1550578579107,["Aaron@WIN-XIE",[[1,1281,"  "],[1,1317,"  "],[1,1339," "],[1,1343," "],[1,1368,"  "],[1,1406," "],[1,1410," "],[1,1435,"  "],[1,1498,"  "],[1,1542,"  "],[1,1557,"  "],[1,1618,"  "],[1,1674,"  "],[1,1677," "],[1,1681," "],[1,1696,"  "],[1,1745," "],[1,1749," "],[1,1760,"  "],[1,1791,"  "],[1,1825,"  "],[1,1827,"  "]],[1281,1832],[1283,1868]]],[1550578592129,["Aaron@WIN-XIE",[[1,1349,"\n      "]],[1342,1342],[1349,1349]]],[1550578594914,["Aaron@WIN-XIE",[[1,1427,"\n      "]],[1420,1420],[1427,1427]]],[1550578597244,["Aaron@WIN-XIE",[[1,1530,"\n      "]],[1523,1523],[1530,1530]]],[1550578601312,["Aaron@WIN-XIE",[[1,1600,"  "],[1,1653,"  "]],[1599,1667],[1601,1671]]],[1550578605201,["Aaron@WIN-XIE",[[1,1751,"  "],[1,1802,"  "],[1,1813," "],[1,1819," "],[1,1852,"  "],[1,1878,"  "]],[1751,1885],[1753,1895]]],[1550578607627,["Aaron@WIN-XIE",[[1,1825,"  "],[1,1852,"  "]],[1825,1867],[1827,1871]]],[1550578610875,["Aaron@WIN-XIE",[[1,1919,"\n    "]],[1914,1914],[1919,1919]]],[1550578619817,["Aaron@WIN-XIE",[[1,2033,"  "],[1,2044,"  "],[1,2097,"  "],[1,2099,"  "]],[2032,2110],[2034,2118]]],[1550578624065,["Aaron@WIN-XIE",[[1,2053,"  "]],[2053,2053],[2055,2055]]],[1550578625274,["Aaron@WIN-XIE",[[-1,2053,"  "]],[2055,2055],[2053,2053]]],[1550578626369,["Aaron@WIN-XIE",[[1,2052,"  "]],[2052,2052],[2054,2054]]],[1550578680927,["Aaron@WIN-XIE",[[1,1938,"\n      "]],[1938,1938],[1945,1945]]],[1550578682783,["Aaron@WIN-XIE",[[1,1978,"\n      "]],[1978,1978],[1985,1985]]],[1550578685082,["Aaron@WIN-XIE",[[1,2003,"\n      "]],[2003,2003],[2010,2010]]],[1550578688464,["Aaron@WIN-XIE",[[-1,2008,"  "]],[2010,2010],[2008,2008]]],[1550578704869,["Aaron@WIN-XIE",[[-1,1234,"   "]],[1234,1237],[1234,1234]]],[1550578707696,["Aaron@WIN-XIE",[[-1,1234,"\n"]],[1234,1234],[1233,1233]]],[1550578710675,["Aaron@WIN-XIE",[[1,1234,"\n"]],[1233,1233],[1234,1234]]],[1550578717060,["Aaron@WIN-XIE",[[1,867,"* \n  "]],[864,864],[869,869]]],[1550578718055,["Aaron@WIN-XIE",[[-1,865,"  * "]],[869,869],[866,866]]],[1550578741518,["Aaron@WIN-XIE",[[-1,2494,">"]],[2495,2495],[2494,2494]]],[1550578742088,["Aaron@WIN-XIE",[[-1,2493,"\n"]],[2494,2494],[2493,2493]]],[1550578744209,["Aaron@WIN-XIE",[[1,2493,"\n"]],[2493,2493],[2494,2494]]],[1550578750825,["Aaron@WIN-XIE",[[1,2494,">"]],[2494,2494],[2495,2495]]]],null,"Aaron@WIN-XIE"]]}